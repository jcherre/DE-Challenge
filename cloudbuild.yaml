steps:

  # Build Docker image if tests pass
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker Image'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/flask-api:$SHORT_SHA', '.']

  # Install dependencies and run tests
  - name: 'python:3.10'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        export PYTHONPATH=$(pwd)
        pip install -r requirements.txt
        pytest

  # Push Docker image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker Image'
    args: ['push', 'gcr.io/$PROJECT_ID/flask-api:$SHORT_SHA']

  # Deploy Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    args:
      - 'gcloud'
      - 'run'
      - 'deploy'
      - 'flask-api'
      - '--image'
      - 'gcr.io/$PROJECT_ID/flask-api:$SHORT_SHA'
      - '--platform'
      - 'managed'
      - '--region'
      - '$LOCATION'
      - '--vpc-connector'
      - 'vpc-connector-default'
      - '--allow-unauthenticated'
      - '--service-account'
      - 'quickstart-service-account@micro-progress-452300-g0.iam.gserviceaccount.com'
      - '--set-env-vars'
      - 'API_TOKEN=${_API_TOKEN},PROJECT_ID=$PROJECT_ID,REGION=$LOCATION,INSTANCE=${_INSTANCE},DB_USER=${_DB_USER},DB_PASS=${_DB_PASS},DB_NAME=${_DB_NAME}'

substitutions:
  _API_TOKEN: ''
  _INSTANCE: ''
  _DB_USER: ''
  _DB_PASS: ''
  _DB_NAME: ''

images:
  - 'gcr.io/$PROJECT_ID/flask-api:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
